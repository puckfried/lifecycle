{"version":3,"sources":["Components/Header.js","Components/Users.js","Components/SearchResults.js","Components/Search.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","clickHandler","e","onCurrentChange","target","textContent","this","current","className","onClick","Component","Users","name","user","mail","SearchResults","filterArray","filter","element","searchTerm","search","toLowerCase","email","includes","sortName","sort","a","b","nameA","toUpperCase","nameB","setState","users","sortUserName","username","sortEmail","state","error","isLoaded","fetch","result","json","res","filterUsers","scope","icon","faSort","map","role","Search","changeHandler","value","console","log","reset","preventDefault","onSearchingChange","previousSibling","componentWillUnmount","searching","onChange","About","App","handleSearchingChange","handleCurrentChange","nextState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.094845a9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Header extends Component {\n    constructor(props){\n        super(props);\n\n    }\n    \n    clickHandler = (e) => {\n        this.props.onCurrentChange(e.target.textContent)\n    }\n\n    render() {\n        const current = this.props.current\n        return (\n            <div className='header'>\n                <h1>User Search</h1>\n                <nav>\n                    <ul onClick={this.clickHandler} className='flex menu'>\n                        <li className='navItem'>about</li>\n                        <li className='navItem'>search</li>\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nexport class Users extends Component {\n    constructor(props){\n        super(props);\n    }\n    \n    render() {\n        \n        return (\n            <tr className='trUser'>\n                <td className='td'>{this.props.name}</td>\n                <td className='td'>{this.props.user}</td>\n                <td className='td'>{this.props.mail}</td>\n            </tr>\n        )\n    }\n}\n\nexport default Users\n","import React, { Component } from 'react'\nimport Users from './Users'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nexport class SearchResults extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            users: [],\n            searchTerm: '',\n            sort: 'name'\n        };\n       \n        // this.fetchData = this.fetchData.bind(this)\n    }    \n    \n\n    async componentDidMount(){\n        try {\n            const result = await fetch(`https://jsonplaceholder.typicode.com/users`)\n            const res = await result.json();\n            this.setState({users: res})\n        }\n        catch(e){\n            this.setState({error: e})\n        }\n\n\n    }\n\n    filterArray = (user) => {\n        const arrayFilter = user.filter(element => {\n            const searchTerm = (this.props.search).toLowerCase()  \n            const user = element.name.toLowerCase()\n            const mail = element.email.toLowerCase()\n\n            return user.includes(searchTerm) || mail.includes(searchTerm)\n        })\n        return arrayFilter\n    }\n\n    sortName = (user) => {\n        \n        user.sort((a,b) => {\n            let nameA = a.name.toUpperCase()\n            let nameB = b.name.toUpperCase()\n            if (nameA < nameB){return -1}\n            if (nameA > nameB) {return 1}\n            return 0 \n        })\n        this.setState({users: user, sort: 'name'})\n    }\n\n    sortUserName = (user) => {\n        user.sort((a,b) => {\n            let nameA = a.username.toUpperCase()\n            let nameB = b.username.toUpperCase()\n            if (nameA < nameB){return -1}\n            if (nameA > nameB) {return 1}\n            return 0 \n        })\n        this.setState({users: user, sort: 'username'})\n    }\n\n    sortEmail = (user) => {\n        \n        user.sort((a,b) => {\n            let nameA = a.email.toUpperCase()\n            let nameB = b.email.toUpperCase()\n            if (nameA < nameB){return -1}\n            if (nameA > nameB) {return 1}\n            return 0 \n        })\n        this.setState({users: user, sort: 'email'})\n    }\n    \n    render() {\n        const { error, isLoaded, users } = this.state;\n        \n        const filterUsers = this.filterArray(users)\n\n        return(\n            <div>\n               \n                <table className=\"table table-striped table-bordered\">\n                    <thead className='thead'>\n                    <tr>\n                        <th className='th' scope='col' onClick={() => this.sortName(users)}>{this.state.sort === 'name' ?  <FontAwesomeIcon icon={faSort} /> : ''}  Name</th>\n                        <th className='th' scope='col' onClick={() => this.sortUserName(users)}>{this.state.sort === 'username' ? <FontAwesomeIcon icon={faSort} />  : ''}  UserName</th>\n                        <th className='th' scope='col' onClick={() => this.sortEmail(users)}>{this.state.sort === 'email' ? <FontAwesomeIcon icon={faSort} />  : ''}  Email</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                                      \n                    {filterUsers.map(element =>{\n                            return(\n                                <Users name={element.name} user={element.username} mail={element.email}/>)\n                            })}\n                </tbody></table>\n                \n                {this.state.error ? <div className=\"alert alert-danger\" role=\"alert\">\n                    Oh no! Something went wrong while loading the data!</div> : <div />}\n            \n            </div>\n                        \n        )\n\n}}\n\nexport default SearchResults\n","import React, { Component } from 'react'\n\nexport class Search extends Component {\n    constructor(props){\n       super(props); \n       this.searchTerm = ''\n\n    }\n\n    changeHandler = (e) => {\n        this.searchTerm = e.target.value \n        console.log(this.searchTerm)\n    \n      }\n    \n    \n      clickHandler = (e,reset) => {\n        e.preventDefault()\n        if (reset) {\n            this.props.onSearchingChange('')\n            e.target.previousSibling.previousSibling.value =''}\n        else {\n            this.props.onSearchingChange(this.searchTerm)\n        }\n       \n        \n      }\n\n      componentWillUnmount = () => {\n          console.log('search is unmounted')\n      }\n\n\n\n    render() {\n        const searching = this.props.searching\n        return (\n            <div>\n               <form className='flex search'>\n                    <input onChange={(e)=>this.changeHandler(e)}/>\n                    <button className=\"btn\" onClick={(e)=>this.clickHandler(e, false)}>Search</button>\n                    <button className=\"btn\" onClick={(e)=>this.clickHandler(e, true)}>Reset</button>\n                </form> \n            </div>\n        )\n    }\n}\n\nexport default Search\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\n\nexport class About extends Component {\n    \n    componentWillUnmount = () => {\n        console.log('about is unmounted')\n    }\n\n    render() {\n        return (\n            <div className='about flex clm'>\n                <h3>About me</h3>\n                <p>This is just an empty about page!</p>\n            </div>\n        )\n    }\n}\n\nexport default About\n","import React, { Component} from 'react';\nimport './App.scss';\nimport Header from './Components/Header'\nimport SearchResults from './Components/SearchResults';\nimport Search from './Components/Search'\nimport About from './Components/About'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {searching:'', current: 'search'}\n  }\n  \n  shouldComponentUpdate(nextState){\n    return (nextState.searching !== this.state.searching || nextState.current !== this.state.current)\n  } \n\n  handleSearchingChange = (searching) => {\n    this.setState({searching})\n  }\n  \n\n  handleCurrentChange = (current) => {\n    this.setState({current})\n  }\n\n  componentWillUnmount = () => {\n    console.log('App is unmounted')\n}\n\n\n  render() {\n    \n    return (\n      <div>\n          <Header onCurrentChange={this.handleCurrentChange}/>\n          {this.state.current === 'about' ? <About /> : \n          <main className='main flex clm'>\n               <Search onSearchingChange={this.handleSearchingChange}/>\n               <SearchResults search={this.state.searching}  /> \n          </main>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}